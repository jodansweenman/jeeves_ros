SCRIPT_VER=8
MAX_CHANNELS=2

' Motor controller configuration. Much of this is particular to Grizzly
' and can be generalized/parameterized as the need arises. Page numbers
' are a reference to this document:
' www.roboteq.com/index.php/docman/motor-controllers-documents-and-files/documentation/user-manual/7-nextgen-controllers-user-manual/file

setconfig(_ECHOF, 1) ' Serial echo off (p195)
'setconfig(_RWD, 0) ' Watchdog timeout, milliseconds (p195)
'setconfig(_AMOD, 1, 0) ' Analog input 1 absolute mode
'setconfig(_AMOD, 2, 0) ' Analog input 2 absolute mode

' Undervoltage/overvoltage limits (p214)
'setconfig(_OVL, 150)
'setconfig(_UVL, 120)

' Encoder, speed config (p208, p221)
'setconfig(_EMOD, 1, 18)
'setconfig(_EMOD, 2, 34)
'setconfig(_EPPR, 1, 400)
'setconfig(_EPPR, 2, 400)
'setconfig(_MXRPM, 1, 130)
'setconfig(_MXRPM, 2, 130)

' Current limit (p216)
'setconfig(_ALIM, 1, 200)
'setconfig(_ALIM, 2, 200)

' Max acceleration/deceleration (p219)
'setconfig(_MAC, 1, 20000)
'setconfig(_MDEC, 1, 20000)
'setconfig(_MAC, 2, 20000)
'setconfig(_MDEC, 2, 20000)

' Closed-loop control (p216-218)
'setconfig(_MMOD, 1, 1)
'setconfig(_MMOD, 2, 1)
'setconfig(_KP, 1, 200)
'setconfig(_KI, 1, 200)
'setconfig(_KD, 1, 0)
'setconfig(_KP, 2, 200)
'setconfig(_KI, 2, 200)
'setconfig(_KD, 2, 0)
'setconfig(_ICAP, 1, 100)
'setconfig(_ICAP, 2, 100)
'setconfig(_CLERD, 1, 0)
'setconfig(_CLERD, 2, 0)

top:
	for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++
		if getvalue(_BOOL, ch) = 1 then
			GoSub PrintFeedback  ' 25 Hz
		end if
	next
	c++
	if c = 5 then
		GoSub PrintStatus  ' 5 Hz
		c = 0
	end if
	wait(19)
	goto top

PrintFeedback:
	print("&f:", ch)
	print(":", getvalue(_MOTAMPS, ch))
	print(":", getvalue(_MOTCMD, ch))
	print(":", getvalue(_MOTPWR, ch))
	print(":", getvalue(_ABSPEED, ch))
	print(":", getvalue(_ABCNTR, ch))
	print(":", getvalue(_VOLTS, 2))
	print(":", getvalue(_BATAMPS, ch))
	print(":", getvalue(_ANAIN, ch))
	print(":", getvalue(_TEMP, ch+1))
	print("\r")
	Return
	
PrintStatus:
	print("&s:", SCRIPT_VER)
	print(":", getvalue(_FLTFLAG))
	print(":", getvalue(_STFLAG))
	print(":", getvalue(_VOLTS, 1))
	print(":", getvalue(_VOLTS, 3))
	print(":", getvalue(_TEMP, 1))
	print("\r")
	Return
